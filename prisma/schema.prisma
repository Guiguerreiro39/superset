// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Exercise {
  id   Int    @id @default(autoincrement())
  name String

  CustomExercise CustomExercise[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Set {
  id   Int @id @default(autoincrement())
  kg   Int
  reps Int

  CustomExercise   CustomExercise? @relation(fields: [customExerciseId], references: [id])
  customExerciseId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CustomExercise {
  id Int @id @default(autoincrement())

  sets       Set[]
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int
  Workout    Workout? @relation(fields: [workoutId], references: [id])
  workoutId  Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Workout {
  id Int @id @default(autoincrement())

  basePlan        Plan?            @relation("BaseWorkout")
  basePlanId      Int?
  plan            Plan?            @relation("Workouts", fields: [planId], references: [id])
  planId          Int?
  customExercises CustomExercise[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([id, basePlanId])
  @@unique([id, planId])
}

model Plan {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  workouts      Workout[] @relation("Workouts")
  baseWorkout   Workout?  @relation("BaseWorkout", fields: [baseWorkoutId], references: [id])
  baseWorkoutId Int?      @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
